import java.awt.Color.GRAY
import kotlin.random.Random

// –¶–≤–µ—Ç–∞
const val RESET = "\u001b[0m"
const val RED = "\u001b[31m"
const val GREEN = "\u001b[32m"
const val YELLOW = "\u001b[33m"
const val BLUE = "\u001b[34m"
const val CYAN = "\u001b[36m"
const val MAGENTA = "\u001b[35m"

fun main() {
    println("$MAGENTA=== üè∞ –ü–†–ò–ö–õ–Æ–ß–ï–ù–ò–ï –í –ü–û–î–ó–ï–ú–ï–õ–¨–ï ===$RESET")
    println("–í—ã ‚Äî —Ö—Ä–∞–±—Ä—ã–π –≥–µ—Ä–æ–π, —Å–ø—É—Å–∫–∞—é—â–∏–π—Å—è –≤ –¥—Ä–µ–≤–Ω–µ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ –≤ –ø–æ–∏—Å–∫–∞—Ö —Å–æ–∫—Ä–æ–≤–∏—â.")
    println("–í—ã–±–∏—Ä–∞–π—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è. –£–¥–∞—á–∏!")

    val player = Player(health = 100, gold = 0)
    val inventory = mutableListOf<String>()

    entrance(player, inventory)
}

// –ö–ª–∞—Å—Å –∏–≥—Ä–æ–∫–∞
data class Player(
    var health: Int,
    var gold: Int,
    var hasSword: Boolean = false,
    var hasArmor: Boolean = false
)

fun entrance(player: Player, inventory: MutableList<String>) {
    println("\n$CYAN –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å —É –≤—Ö–æ–¥–∞ –≤ —Ç—ë–º–Ω–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ.$RESET")
    println("–ü–µ—Ä–µ–¥ –≤–∞–º–∏ —Ç—Ä–∏ –ø—É—Ç–∏:")
    println("1. $YELLOW –ù–∞–ª–µ–≤–æ ‚Äî —Å–ª—ã—à–Ω—ã –∑–≤—É–∫–∏ –∫–∞–ø–∞—é—â–µ–π –≤–æ–¥—ã$RESET")
    println("2. $GREEN –ü—Ä—è–º–æ ‚Äî —Ç–∏—Ö–æ –∏ —Ç–µ–º–Ω–æ$RESET")
    println("3. $RED –ù–∞–ø—Ä–∞–≤–æ ‚Äî –ø–∞—Ö–Ω–µ—Ç –≥–Ω–∏–ª—å—é$RESET")

    when (readChoice()) {
        1 -> leftPath(player, inventory)
        2 -> straightPath(player, inventory)
        3 -> rightPath(player, inventory)
        else -> {
            println("$GRAY –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –í—ã –∏–¥—ë—Ç–µ –ø—Ä—è–º–æ.$RESET")
            straightPath(player, inventory)
        }
    }
}

fun leftPath(player: Player, inventory: MutableList<String>) {
    println("\n$CYAN –í—ã –∏–¥—ë—Ç–µ –ø–æ –≤–ª–∞–∂–Ω–æ–º—É —Ç–æ–Ω–Ω–µ–ª—é. –ù–∞ —Å—Ç–µ–Ω–µ ‚Äî —Ñ–∞–∫–µ–ª.$RESET")
    println("–í—ã –≤–∏–¥–∏—Ç–µ —Å—É–Ω–¥—É–∫.")
    println("1. $YELLOW  –û—Ç–∫—Ä—ã—Ç—å —Å—É–Ω–¥—É–∫$RESET")
    println("2. $GREEN –ü—Ä–æ–π—Ç–∏ –º–∏–º–æ$RESET")

    when (readChoice()) {
        1 -> {
            if (Random.nextFloat() < 0.7) {
                println("$GREENüéâ –í—ã –Ω–∞—à–ª–∏ 20 –∑–æ–ª–æ—Ç—ã—Ö!$RESET")
                player.gold += 20
            } else {
                println("$REDüíÄ –õ–æ–≤—É—à–∫–∞! –í–∞–º –Ω–∞–Ω–µ—Å–µ–Ω–æ 20 —É—Ä–æ–Ω–∞.$RESET")
                player.health = maxOf(0, player.health - 20)
                if (player.health == 0) return endGame(false, player, inventory)
            }
        }
        else -> println("$GRAY –í—ã –ø—Ä–æ—à–ª–∏ –º–∏–º–æ.$RESET")
    }
    dragonCave(player, inventory)
}

fun straightPath(player: Player, inventory: MutableList<String>) {
    println("\n$CYAN –¢–æ–Ω–Ω–µ–ª—å –ø—Ä–∏–≤—ë–ª –≤–∞—Å –≤ –∫–æ–º–Ω–∞—Ç—É —Å –º–µ—á–æ–º –Ω–∞ –∞–ª—Ç–∞—Ä–µ.$RESET")
    println("1. $YELLOW –í–∑—è—Ç—å –º–µ—á$RESET")
    println("2. $GREEN –û—Å—Ç–∞–≤–∏—Ç—å$RESET")

    when (readChoice()) {
        1 -> {
            println("$GREEN‚öîÔ∏è –í—ã –≤–∑—è–ª–∏ –º–µ—á! –ê—Ç–∞–∫–∞ —É—Å–∏–ª–µ–Ω–∞.$RESET")
            player.hasSword = true
            inventory.add("–ú–µ—á")
        }
        else -> println("$GRAY –í—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –º–µ—á.$RESET")
    }
    monsterRoom(player, inventory)
}

fun rightPath(player: Player, inventory: MutableList<String>) {
    println("\n$RED –í—ã –ø–æ–ø–∞–ª–∏ –≤ –∑–∞–ª, –ø–æ–ª–Ω—ã–π –ø–∞—É–∫–æ–≤!$RESET")
    if (player.hasArmor) {
        println("$GREENüõ°Ô∏è –ö —Å—á–∞—Å—Ç—å—é, —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å–ø–µ—Ö–∏! –í—ã –ø—Ä–æ—à–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ.$RESET")
    } else {
        val damage = 15
        println("$REDüï∑Ô∏è –ü–∞—É–∫–∏ –∞—Ç–∞–∫—É—é—Ç! –£—Ä–æ–Ω: $damage$RESET")
        player.health = maxOf(0, player.health - damage)
        if (player.health == 0) return endGame(false, player, inventory)
    }
    treasureRoom(player, inventory)
}

fun dragonCave(player: Player, inventory: MutableList<String>) {
    println("\n$RED –í –≥–ª—É–±–∏–Ω–µ –≤—ã –≤–∏–¥–∏—Ç–µ –¥—Ä–∞–∫–æ–Ω–∞!$RESET")
    println("1. $YELLOW –ê—Ç–∞–∫–æ–≤–∞—Ç—å$RESET")
    println("2. $GREEN –ü–æ–ø—ã—Ç–∞—Ç—å—Å—è —É–∫—Ä–∞—Å—Ç—å –∑–æ–ª–æ—Ç–æ$RESET")
    println("3. $BLUE –£–±–µ–∂–∞—Ç—å$RESET")

    when (readChoice()) {
        1 -> {
            val damage = if (player.hasSword) 50 else 20
            val dragonHealth = 60
            println("$RED‚öîÔ∏è –í—ã –∞—Ç–∞–∫—É–µ—Ç–µ –¥—Ä–∞–∫–æ–Ω–∞! –ù–∞–Ω–µ—Å–µ–Ω–æ $damage —É—Ä–æ–Ω–∞.$RESET")
            if (damage >= dragonHealth) {
                println("$GREENüêâ –î—Ä–∞–∫–æ–Ω –ø–æ–≤–µ—Ä–∂–µ–Ω!$RESET")
                println("$YELLOW –í—ã –Ω–∞—à–ª–∏ —Å–æ–∫—Ä–æ–≤–∏—â–µ: 100 –∑–æ–ª–æ—Ç—ã—Ö!$RESET")
                player.gold += 100
                endGame(true, player, inventory)
            } else {
                println("$RED –î—Ä–∞–∫–æ–Ω —Å–∏–ª—å–Ω–µ–µ! –û–Ω –∞—Ç–∞–∫—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç!$RESET")
                player.health = maxOf(0, player.health - 40)
                if (player.health == 0) {
                    println("$REDüíÄ –í—ã –ø–æ–≥–∏–±–ª–∏ –æ—Ç –∫–æ–≥—Ç–µ–π –¥—Ä–∞–∫–æ–Ω–∞.$RESET")
                } else {
                    println("$CYAN –í—ã —Å–±–µ–∂–∞–ª–∏, —Ä–∞–Ω–µ–Ω—ã–µ.$RESET")
                }
                endGame(false, player, inventory)
            }
        }
        2 -> {
            if (Random.nextBoolean()) {
                println("$GREENüéâ –í–∞–º —É–¥–∞–ª–æ—Å—å —É–∫—Ä–∞—Å—Ç—å 50 –∑–æ–ª–æ—Ç—ã—Ö!$RESET")
                player.gold += 50
            } else {
                println("$REDüíÄ –î—Ä–∞–∫–æ–Ω –∑–∞–º–µ—Ç–∏–ª –≤–∞—Å! –í—ã –ø–æ–≥–∏–±–ª–∏.$RESET")
                player.health = 0
                endGame(false, player, inventory)
            }
        }
        else -> {
            println("$BLUE –í—ã —Å–±–µ–∂–∞–ª–∏.$RESET")
            endGame(false, player, inventory)
        }
    }
}

fun monsterRoom(player: Player, inventory: MutableList<String>) {
    println("\n$RED –í –∫–æ–º–Ω–∞—Ç–µ ‚Äî –æ–≥—Ä–æ–º–Ω—ã–π —Ç—Ä–æ–ª–ª—å!$RESET")
    println("1. –ê—Ç–∞–∫–æ–≤–∞—Ç—å")
    println("2. –ë–µ–∂–∞—Ç—å")

    when (readChoice()) {
        1 -> {
            val damage = if (player.hasSword) 30 else 10
            println("$RED‚öîÔ∏è –£—Ä–æ–Ω —Ç—Ä–æ–ª–ª—é: $damage$RESET")
            if (damage >= 30) {
                println("$GREENüéâ –í—ã –ø–æ–±–µ–¥–∏–ª–∏! –ù–∞—à–ª–∏ 30 –∑–æ–ª–æ—Ç—ã—Ö.$RESET")
                player.gold += 30
            } else {
                println("$REDüí• –¢—Ä–æ–ª–ª—å —É–¥–∞—Ä–∏–ª –≤–∞—Å! –£—Ä–æ–Ω: 25$RESET")
                player.health = maxOf(0, player.health - 25)
            }
        }
        else -> println("$BLUE –í—ã —Å–±–µ–∂–∞–ª–∏.$RESET")
    }
    treasureRoom(player, inventory)
}

fun treasureRoom(player: Player, inventory: MutableList<String>) {
    println("\n$YELLOW –í—ã –Ω–∞—à–ª–∏ –∫–æ–º–Ω–∞—Ç—É —Å —Å–æ–∫—Ä–æ–≤–∏—â–∞–º–∏!$RESET")
    println("–ó–æ–ª–æ—Ç–æ: 50, –¥–æ—Å–ø–µ—Ö–∏ –Ω–∞ —Å—Ç–∞—Ç—É–µ.")
    println("1. –í–∑—è—Ç—å –≤—Å—ë")
    println("2. –í–∑—è—Ç—å —Ç–æ–ª—å–∫–æ –∑–æ–ª–æ—Ç–æ")
    println("3. –í–∑—è—Ç—å –¥–æ—Å–ø–µ—Ö–∏")

    when (readChoice()) {
        1 -> {
            player.gold += 50
            player.hasArmor = true
            inventory.add("–î–æ—Å–ø–µ—Ö–∏")
            println("$GREEN –í—ã –≤–∑—è–ª–∏ –≤—Å—ë!$RESET")
        }
        2 -> {
            player.gold += 50
            println("$GREEN –¢–æ–ª—å–∫–æ –∑–æ–ª–æ—Ç–æ.$RESET")
        }
        3 -> {
            player.hasArmor = true
            inventory.add("–î–æ—Å–ø–µ—Ö–∏")
            println("$GREEN –¢–æ–ª—å–∫–æ –¥–æ—Å–ø–µ—Ö–∏.$RESET")
        }
    }
    dragonCave(player, inventory)
}

fun endGame(victory: Boolean, player: Player, inventory: List<String>) {
    println("\n" + if (victory) "$GREENüéâ –ü–û–ë–ï–î–ê!$RESET" else "$REDüíÄ –ö–û–ù–ï–¶$RESET")
    println("–§–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    println("‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: ${player.health}")
    println("üí∞ –ó–æ–ª–æ—Ç–æ: ${player.gold}")
    println("üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: ${inventory.joinToString(", ").ifEmpty { "–ø—É—Å—Ç–æ" }}")
    println("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!")
    return
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–≤–æ–¥–∞
fun readChoice(): Int {
    print("$CYAN –í–∞—à –≤—ã–±–æ—Ä: $RESET")
    return readLine()?.trim()?.toIntOrNull() ?: 0
}