import kotlin.random.Random

// –¶–≤–µ—Ç–∞
const val RESET = "\u001b[0m"
const val RED = "\u001b[31m"
const val GREEN = "\u001b[32m"
const val YELLOW = "\u001b[33m"
const val CYAN = "\u001b[36m"
const val BLUE = "\u001b[34m"
const val GRAY = "\u001b[90m"

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏
const val LANE_COUNT = 5
const val CAR_SYMBOL = "üöó"
const val OBSTACLE_SYMBOL = "üü•"
const val ROAD_SYMBOL = "üü´"
const val PLAYER_SYMBOL = "üöô"

fun main() {
    println("$CYAN=== üöô –ì–û–ù–ö–ò ===$RESET")
    println("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: A = –≤–ª–µ–≤–æ, D = –≤–ø—Ä–∞–≤–æ, Q = –≤—ã—Ö–æ–¥")
    println("–ò–∑–±–µ–≥–∞–π—Ç–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π! –°—á—ë—Ç —Ä–∞—Å—Ç—ë—Ç —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º.")

    var playerLane = LANE_COUNT / 2  // –Ω–∞—á–∞–ª—å–Ω–∞—è –ø–æ–ª–æ—Å–∞
    val road = Array(10) { IntArray(LANE_COUNT) { 0 } } // 0 = –ø—É—Å—Ç–æ, 1 = –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ
    var score = 0
    var speedMs = 800L
    var gameOver = false

    while (!gameOver) {
        // –î–≤–∏–≥–∞–µ–º –¥–æ—Ä–æ–≥—É –≤–≤–µ—Ä—Ö (–Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–Ω–∏–∑—É)
        for (i in 0 until road.size - 1) {
            road[i] = road[i + 1].copyOf()
        }

        // –ù–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ (–≤–æ–∑–º–æ–∂–Ω–æ, —Å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ–º)
        val newLine = IntArray(LANE_COUNT) { 0 }
        if (Random.nextFloat() < 0.3) { // 30% —à–∞–Ω—Å
            val obsLane = Random.nextInt(LANE_COUNT)
            if (obsLane != playerLane) {
                newLine[obsLane] = 1
            }
        }
        road[road.size - 1] = newLine

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è
        if (road[0][playerLane] == 1) {
            println("$REDüíÄ –°–¢–û–õ–ö–ù–û–í–ï–ù–ò–ï!$RESET")
            gameOver = true
            continue
        }

        // –û—Ç—Ä–∏—Å–æ–≤–∫–∞
        print("\u001b[2J\u001b[H") // –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ (—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤)
        println("$GREEN –°—á—ë—Ç: $score$RESET")
        println("–ü–æ–ª–æ—Å—ã: 1     2     3     4     5")

        for (i in road.indices) {
            for (j in 0 until LANE_COUNT) {
                if (i == 0 && j == playerLane) {
                    print("$PLAYER_SYMBOL ")
                    continue
                }
                if (road[i][j] == 1) {
                    print("$OBSTACLE_SYMBOL ")
                } else {
                    print("$ROAD_SYMBOL ")
                }
            }
            println()
        }

        // –í–≤–æ–¥
        print("$CYAN –í–∞—à —Ö–æ–¥ (A/D/Q): $RESET")
        val input = readLine()?.trim()?.lowercase()

        when (input) {
            "a" -> if (playerLane > 0) playerLane--
            "d" -> if (playerLane < LANE_COUNT - 1) playerLane++
            "q" -> {
                println("–í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã.")
                return
            }
        }

        score++
        speedMs = maxOf(200, speedMs - 5) // —É—Å–∫–æ—Ä–µ–Ω–∏–µ
        Thread.sleep(speedMs)
    }

    println("$REDüíÄ –ò–ì–†–ê –û–ö–û–ù–ß–ï–ù–ê!$RESET")
    println("$YELLOW –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—á—ë—Ç: $score$RESET")
    if (score > 100) println("$GREEN –ú–æ–ª–æ–¥–µ—Ü! –¢—ã –ø—Ä–æ–µ—Ö–∞–ª –¥–∞–ª–µ–∫–æ!$RESET")
}